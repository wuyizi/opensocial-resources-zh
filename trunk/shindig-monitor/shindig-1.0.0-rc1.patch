Index: config/container.js
===================================================================
--- config/container.js	(revision 762759)
+++ config/container.js	(working copy)
@@ -86,6 +86,11 @@
 // Only configuration for required features will be used.
 // See individual feature.xml files for configuration details.
 "gadgets.features" : {
+  
+  "shindig.monitor" : {
+    "enabled" : true
+  },
+
   "core.io" : {
     // Note: /proxy is an open proxy. Be careful how you expose this!
     "proxyUrl" : "http://%host%/gadgets/proxy?refresh=%refresh%&url=%url%",
@@ -137,5 +142,4 @@
        "activity" : ["id", "title"]
     }
   }
-
 }}
Index: features/core.io/io.js
===================================================================
--- features/core.io/io.js	(revision 762759)
+++ features/core.io/io.js	(working copy)
@@ -90,6 +90,10 @@
    * @param {Object} xobj
    */
   function processNonProxiedResponse(url, callback, params, xobj) {
+    if (shindig && shindig.monitor && xobj.readyState == 4) {
+      gadgets.rpc.call(null, 'shindig.monitor.onResponse', null, url, params, xobj.responseText.length, false);
+    }
+
     if (hadError(xobj, callback)) {
       return;
     }
@@ -110,6 +114,10 @@
    * @param {Object} xobj
    */
   function processResponse(url, callback, params, xobj) {
+    if (shindig && shindig.monitor && xobj.readyState == 4) {
+      gadgets.rpc.call(null, 'shindig.monitor.onResponse', null, url, params, xobj.responseText.length, true);
+    }
+  
     if (hadError(xobj, callback)) {
       return;
     }
@@ -194,6 +202,11 @@
    */
   function makeXhrRequest(realUrl, proxyUrl, callback, paramData, method,
       params, processResponseFunction, opt_contentType) {
+
+    if (shindig && shindig.monitor) {
+      gadgets.rpc.call(null, 'shindig.monitor.onRequest', null, realUrl, params);
+    }
+      
     var xhr = makeXhr();
 
     xhr.open(method, proxyUrl, true);
Index: features/core/util.js
===================================================================
--- features/core/util.js	(revision 762759)
+++ features/core/util.js	(working copy)
@@ -226,6 +226,10 @@
       for (var i = 0, j = onLoadHandlers.length; i < j; ++i) {
         onLoadHandlers[i]();
       }
+      
+      if (shindig && shindig.monitor) {
+        gadgets.rpc.call(null, 'shindig.monitor.onAppReady', null);
+      }
     },
 
     /**
Index: features/features.txt
===================================================================
--- features/features.txt	(revision 762759)
+++ features/features.txt	(working copy)
@@ -24,3 +24,5 @@
 features/tabs/feature.xml
 features/views/feature.xml
 features/pubsub/feature.xml
+
+features/monitor/feature.xml
Index: features/monitor/feature.xml
===================================================================
--- features/monitor/feature.xml	(revision 0)
+++ features/monitor/feature.xml	(revision 0)
@@ -0,0 +1,41 @@
+<?xml version="1.0"?>
+<!--
+Licensed to the Apache Software Foundation (ASF) under one
+or more contributor license agreements. See the NOTICE file
+distributed with this work for additional information
+regarding copyright ownership. The ASF licenses this file
+to you under the Apache License, Version 2.0 (the
+"License"); you may not use this file except in compliance
+with the License. You may obtain a copy of the License at
+
+http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing,
+software distributed under the License is distributed on an
+"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+KIND, either express or implied. See the License for the
+specific language governing permissions and limitations under the License.
+-->
+<feature>
+  <name>shindig.monitor</name>
+  <dependency>rpc</dependency>
+  <gadget>
+    <script>
+      var shindig = shindig || {};
+      var requiredConfig = {
+        "enabled": gadgets.config.BooleanValidator
+      };
+      gadgets.config.register("shindig.monitor", requiredConfig,
+        function(config) {
+          var configParams = config["shindig.monitor"];
+          if (configParams.enabled) {
+            shindig.monitor = shindig.monitor || {};
+            shindig.monitor.config = configParams;
+          }
+      });
+    </script>
+  </gadget>
+  <container>
+    <script src="monitor.js"/>
+  </container>
+</feature>
Index: features/monitor/monitor.js
===================================================================
--- features/monitor/monitor.js	(revision 0)
+++ features/monitor/monitor.js	(revision 0)
@@ -0,0 +1,248 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+var shindig = shindig || {};
+
+shindig.monitor = (function() {
+
+  function log(obj) {
+    if (window.console) {
+      window.console.log(obj);
+    }
+  };
+
+  function info(text) {
+    if (window.console) {
+      window.console.info(text);
+    }
+  };
+  
+  function isIE() {
+    if (navigator.appName.indexOf('Microsoft') != -1) {
+      return true;
+    } else {
+      return false;
+    }
+  };
+  
+  
+  function genKey(url, params) {
+    return url + params;
+  };
+  
+  var monitors_ = {};
+  
+  var Monitor = function(gadget) {
+    var me = this;
+    var ifr = document.getElementById(gadget.getIframeId());
+    var win = ifr.contentWindow;
+    var done = function() {
+      if (isIE()) {
+        if (ifr.readyState != 'loaded' && ifr.readyState != 'complete') {
+          return; // still loading
+        }
+        ifr.onreadystatechange = null;
+      }
+      
+      me['iframeReadyTime'] = new Date().getTime();
+    };
+    if (isIE()) {
+      ifr.onreadystatechange = done;
+    } else {
+      ifr.onload = done;
+    }
+    
+    me['title'] = gadget['title'];
+    me['iframeId'] = gadget.getIframeId();
+    me['ioTimes'] = {};
+    me['ioTemps'] = {};
+  };
+  
+  var IOTime = function(url) {
+    this.url = url;
+    this.items = [];
+    this.addItem = function(timeKey, params, length, isProxied) {
+      this.items.push({
+        REQUEST_TIME : timeKey['start'],
+        RESPONSE_TIME : timeKey['end'],
+        METHOD : params.METHOD || 'GET',
+        CONTENT_TYPE : params.CONTENT_TYPE || 'TEXT',
+        POST_DATA : params.POST_DATA || '',
+        AUTHORIZATION : params.AUTHORIZATION || 'NONE',
+        LENGTH : length,
+        IS_PROXIED : isProxied
+      });
+    };
+  };
+  
+  return {
+    all: monitors_,
+  
+    init: function() {
+      gadgets.rpc.register('shindig.monitor.get', shindig.monitor.get);
+      gadgets.rpc.register('shindig.monitor.onAppReady', shindig.monitor.onAppReady);
+      gadgets.rpc.register('shindig.monitor.onRequest', shindig.monitor.onRequest);
+      gadgets.rpc.register('shindig.monitor.onResponse', shindig.monitor.onResponse);
+    },
+    
+    add: function(gadget) {
+      var monitor = new Monitor(gadget);
+      monitors_[gadget.getIframeId()] = monitor;
+      monitor['startTime'] = new Date().getTime();
+    },
+
+    get: function() {
+      return monitors_[this.f];
+    },
+    
+    onAppReady: function() {
+      var monitor = monitors_[this.f];
+      monitor['appReadyTime'] = new Date().getTime();
+    },
+
+    onRequest: function(url, params) {
+      var timeKey = {};
+      timeKey['start'] = new Date().getTime();
+      
+      var monitor = monitors_[this.f];
+      monitor['ioTemps'][timeKey] = url;
+      
+      params['TIMES_KEY'] = timeKey;
+    },
+
+    onResponse: function(url, params, length, isProxied) {
+      var timeKey = params['TIMES_KEY'];
+      timeKey['end'] = new Date().getTime();
+      
+      var monitor = monitors_[this.f];
+      delete monitor['ioTemps'][timeKey];
+      
+      monitor['ioTimes'][url] = monitor['ioTimes'][url] || new IOTime(url);
+      monitor['ioTimes'][url].addItem(timeKey, params, length, isProxied);
+    },
+    
+    clear: function() {
+      for (var ifrId in monitors_) {
+        var monitor = monitors_[ifrId];
+        monitor['ioTimes'] = {};
+        monitor['ioTemps'] = {};
+      }
+      shindig.monitor.report();
+    },
+      
+    dump: function() {
+      for (var ifrId in monitors_) {
+        var monitor = monitors_[ifrId];
+        info(ifrId + ' - appReady : ' + (monitor['appReadyTime'] - monitor['startTime']));    
+        info(ifrId + ' - iframeReady : ' + (monitor['iframeReadyTime'] - monitor['startTime']));
+        var ioTimes = monitor['ioTimes'];
+        for (var url in ioTimes) {
+          var ioTime = ioTimes[url];
+          for (var index = 0; index < ioTime.items.length; index++) {
+            var item = ioTime.items[index];
+            info(ifrId + ' - ' + 
+                [item.IS_PROXIED ? 'PROXIED' : 'NON_PROXIED', 
+                 item.RESPONSE_TIME - item.REQUEST_TIME,
+                 item.LENGTH,
+                 item.METHOD,
+                 item.CONTENT_TYPE,
+                 item.AUTHORIZATION,
+                 url,
+                 item.POST_DATA, ].join(',\t'));
+          }
+        }
+      }
+    },
+    
+    report: function() {
+      var elMain = $('#monitor-report');
+      elMain.empty();
+      var elAppList = $('<ul class="app-list"></ul>').appendTo(elMain);
+      
+      var header = $('<li id="report-header">' + 
+                       '<div>App Title</div>' +
+                       '<ul class="timer-list">' +
+                         '<li><div>Timer</div>' +
+                           '<ul class="item-list"><li></li></ul>'
+                         '</li>' + 
+                       '</ul>' +
+                     '</li>').appendTo(elAppList);
+      
+      header.find('.item-list > li').append('<div>Latency</div>')
+                                    .append('<div>Length</div>')
+                                    .append('<div>Method</div>')
+                                    .append('<div>Content</div>')
+                                    .append('<div>Auth</div>')
+                                    .append('<div class="long">Url</div>')
+                                    .append('<div class="long">PostData</div>');
+      
+      for (var ifrId in monitors_) {
+        var monitor = monitors_[ifrId];
+       
+        var elApp = $('<li></li>').append('<div>' + monitor['title'] + '</div>')
+                                  .appendTo(elAppList);
+        
+        var elTimerList = $('<ul class="timer-list"></ul>').appendTo(elApp);
+        
+        var elAppReady = $('<li></li>').append('<div>App Ready</div>').appendTo(elTimerList);
+        var appReadyLatency = monitor['appReadyTime'] - monitor['startTime'];
+        $('<ul class="item-list"></ul>').append('<li><div>' + appReadyLatency + '</div></li>')
+                                        .appendTo(elAppReady);
+
+        var elIfrReady = $('<li></li>').append('<div>Iframe Ready</div>').appendTo(elTimerList);
+        var ifrReadyLatency = (monitor['iframeReadyTime'] - monitor['startTime']);
+        $('<ul class="item-list"></ul>').append('<li><div>' + ifrReadyLatency + '</div></li>')
+                                        .appendTo(elIfrReady);
+
+        var elNpXhr = $('<li></li>').append('<div>NonProxied Xhr</div>')
+                                                  .appendTo(elTimerList);
+        var elNpXhrList = $('<ul class="item-list"></ul>').appendTo(elNpXhr);
+        
+        var elPXhr = $('<li></li>').append('<div>Proxied Xhr</div>')
+                                                 .appendTo(elTimerList);
+        var elPXhrList = $('<ul class="item-list"></ul>').appendTo(elPXhr);
+        
+        var ioTimes = monitor['ioTimes'];
+        for (var url in ioTimes) {
+          var ioTime = ioTimes[url];
+          for (var index = 0; index < ioTime.items.length; index++) {
+            var item = ioTime.items[index];
+            var elItem = $('<li></li>').append('<div>' + (item.RESPONSE_TIME - item.REQUEST_TIME) + '</div>')
+                                       .append('<div>' + item.LENGTH + '</div>')
+                                       .append('<div>' + item.METHOD + '</div>')
+                                       .append('<div>' + item.CONTENT_TYPE + '</div>')
+                                       .append('<div>' + item.AUTHORIZATION + '</div>')
+                                       .append('<div class="long"><a href="' + url + '">' + url + '</a></div>')
+                                       .append('<div class="long" title="' + 
+                                               gadgets.util.escape(item.POST_DATA) + '">' 
+                                               + (item.POST_DATA || '&nbsp;') + '</div>');
+            
+            if (item.IS_PROXIED) {
+              elItem.appendTo(elPXhrList);
+            } else {
+              elItem.appendTo(elNpXhrList);
+            }
+          }
+        }
+      }
+    }
+  };
+})();
+
+
Index: features/opensocial-current/feature.xml
===================================================================
--- features/opensocial-current/feature.xml	(revision 762759)
+++ features/opensocial-current/feature.xml	(working copy)
@@ -24,6 +24,8 @@
   <!-- <dependency>caja</dependency> -->
   <!-- Must include the "caja" feature to display samplecontainer -->
   <!-- gadgets when "use caja" is checked -->
+  
+  <dependency>shindig.monitor</dependency>
   <gadget>    
     <script>
       var requiredConfig = {
Index: javascript/container/monitor.css
===================================================================
--- javascript/container/monitor.css	(revision 0)
+++ javascript/container/monitor.css	(revision 0)
@@ -0,0 +1,85 @@
+#monitor-report {
+  font-family: courier new;
+  font-size:12px;
+  margin:20px 0px 40px 0px;
+}
+
+#monitor-report a{
+  text-decoration:none;
+}
+#monitor-report ul{
+  padding-left:0px;
+  margin:0px;
+}
+
+#report-header {
+  font-style:italic;
+  color:#808080;
+}
+
+#report-header > ul {
+  border-bottom:1px solid #808080;
+}
+
+#report-header  li {
+  border-top:none;
+}
+
+.app-list{
+  list-style: none;
+}
+
+.app-list > li {
+  clear:both;
+  padding:20px;
+}
+
+.app-list > li > div{
+  font-weight: bold;
+  float:left;
+  width: 120px;
+  display:inline;
+}
+
+.timer-list {
+  float:left;
+  list-style: none;
+}
+
+.timer-list > li {
+  clear:both;
+  border-top:1px solid #808080;
+}
+
+.timer-list > li > div{
+  font-weight: bold;
+  float:left;
+  width: 120px;
+  padding:0px 2px;
+  display:inline;
+  border-left: 1px solid #808080;
+}
+
+.item-list {
+  float:left;
+  list-style: none;
+}
+
+.item-list > li{
+  clear:both;
+}
+
+.item-list > li > div {
+  float:left;
+  display:inline;
+  width:60px;
+  padding:0px 2px;
+  border-left: 1px solid #808080;
+}
+
+.item-list > li > div.long {
+  width:300px;
+  overflow:hidden;
+  white-space:nowrap;
+  margin-right:20px;
+}
Index: javascript/container/sample-monitor.html
===================================================================
--- javascript/container/sample-monitor.html	(revision 0)
+++ javascript/container/sample-monitor.html	(revision 0)
@@ -0,0 +1,80 @@
+<!DOCTYPE html>
+<html>
+<head>
+<title>Sample Monitor</title>
+<!-- default container look and feel -->
+<link rel="stylesheet" href="gadgets.css">
+<style>
+  .gadgets-gadget-chrome {
+    width: 80%;
+    float: none;
+    margin: auto;
+  }
+  .gadgets-gadget {
+    width: 100%;
+  }
+</style>
+
+<link rel="stylesheet" href="monitor.css">
+<script src="http://www.google.com/jsapi" type="text/javascript"></script>
+<script type="text/javascript">
+	google.load("jquery", "1.2.6");
+</script>
+
+<script type="text/javascript" src="/gadgets/js/rpc:shindig.monitor.js?c=1&debug=1"></script>
+<script type="text/javascript" src="util.js"></script>
+<script type="text/javascript" src="gadgets.js"></script>
+<script type="text/javascript">
+
+var my = {};
+
+my.LayoutManager = function() {
+  gadgets.LayoutManager.call(this);
+};
+my.LayoutManager.inherits(gadgets.LayoutManager);
+my.LayoutManager.prototype.getGadgetChrome = function(gadget) {
+  var chromeId = 'gadget-chrome-' + gadget.id;
+  return chromeId ? document.getElementById(chromeId) : null;
+};
+my.renderGadgets = function() {
+  for (var i = 0; i < my.gadgetSpecUrls.length; ++i) {
+    var gadget = gadgets.container.createGadget(
+        {specUrl: my.gadgetSpecUrls[i], title: ("Sample App - " + i)});
+    gadgets.container.addGadget(gadget);
+    gadgets.container.renderGadget(gadget);
+    
+    shindig.monitor.add(gadget);
+  }
+};
+
+my.gadgetSpecUrls = [
+  'http://www.unickway.org.cn/vcdemo/oauth-client.xml',
+  'http://www.unickway.org.cn/asClient/release/sample/SampleApp.xml'
+];
+
+my.init = function() {
+  gadgets.container.layoutManager = new my.LayoutManager();
+
+  shindig.monitor.init();
+};
+
+</script>
+</head>
+<body onLoad="my.init(); my.renderGadgets();">
+  <center>
+    <h2>Shindig Monitor Demo</h2>
+  </center>
+  <div id="gadget-chrome-0" class="gadgets-gadget-chrome"></div>
+  <hr>
+  <div id="gadget-chrome-1" class="gadgets-gadget-chrome"></div>
+  <div id="output" style="clear: left;">
+  </div>
+
+  <!-- The monitor -->
+  <hr>
+  <button onclick="shindig.monitor.dump();">Dump Cosnole</button>
+  <button onclick="shindig.monitor.report();">View Report</button>
+  <button onclick="shindig.monitor.clear();">Clear</button>
+  <div id="monitor-report"></div>
+</body>
+</html>
